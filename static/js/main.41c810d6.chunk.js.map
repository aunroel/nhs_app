{"version":3,"sources":["store/actions/auth.js","components/Dashboard/DashbarodHeader/LinkButton.js","components/Dashboard/DashbarodHeader/DashboardHeader.js","components/Dashboard/ModelList/ModelBox.js","components/Dashboard/ModelList/ModelList.js","components/Dashboard/ModelUpload/subcomponents/UploadButton.js","components/Dashboard/ModelUpload/ModelUpload.js","utils/sleep.js","utils/idGenerator.js","components/Dashboard/DataViewer/DataTable.js","components/Dashboard/DataViewer/DataViewer.js","App.js","components/auth/Login.js","store/actions/index.js","components/auth/Register.js","store/reducers/auth.js","store/reducers/index.js","store/store.js","index.js"],"names":["LinkButton","linkUrl","buttonText","buttonClassNames","currentUrl","to","className","DashboardHeader","useLocation","pathname","useRouteMatch","url","style","flex","justifyContent","ModelBox","modelName","validationLossHistory","validationLoss","optimizerName","learningRate","activation","isDeployed","setDeployed","paddingRight","margin","maxWidth","overflow","fontSize","fontWeight","toFixed","Button","onClick","data","labels","map","v","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","ModelList","useState","searchValue","setSearchValue","models","setModels","loadModels","a","axios","get","res","console","log","parsed","filter","modelMeta","JSON","parse","json_summary","summary","useEffect","config","headers","body","stringify","filename","put","type","placeholder","onChange","event","target","value","name","searchItems","split","string","indexOf","model","val_loss","history","key","length","optimizer","learning_rate","layers","deployed","UploadButton","enabled","disabled","uploadStatuses","ModelUpload","fileIsH5","fileProperties","setFileProperties","file","setFile","uploadStatus","setUploadStatus","handleFiles","f","files","fileIsChosen","fileReadyToUpload","upload","e","preventDefault","formData","FormData","append","post","status","display","href","download","id","sleep","ms","Promise","resolve","setTimeout","idGenerator","uuid4","useStyles","makeStyles","table","minWidth","modelToViewNotation","supportCode","wellBeingScore","weeklySteps","weeklyCalls","errorRate","postCode","DataTable","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","Object","keys","TableCell","TableBody","entry","values","val","idGen","scope","DataViewer","tableData","setTableData","numberOfEntries","setNumberOfEntres","payload","getData","Math","min","connect","loginSuccess","token","setErrorMessage","setSuccessMessage","username","password","inputs","setInputs","handleInput","login","error","onSubmit","Group","Label","Control","registerSuccess","email","password2","register","state","loggedIn","auth","logout","padding","path","initialState","localStorage","getItem","app","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","persistor","persistStore","storeAndPersistor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41c810d6.chunk.js","sourcesContent":["import { REGISTER_SUCCESS, LOGIN_SUCCESS, LOGOUT } from \".\";\r\n\r\nexport const registerSuccess = (token) => {\r\n  return { type: REGISTER_SUCCESS, payload: { token } };\r\n};\r\n\r\nexport const loginSuccess = (token) => {\r\n  return { type: LOGIN_SUCCESS, payload: { token } };\r\n};\r\n\r\nexport const logout = () => {\r\n  return { type: LOGOUT };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"css/dashboard/dashboard-header.css\";\r\n\r\nconst LinkButton = ({ linkUrl, buttonText, currentUrl }) => {\r\n  const isSelected = linkUrl === currentUrl;\r\n  const buttonClassNames =\r\n    \"header-button\" + (isSelected ? \" header-button-selected\" : \"\");\r\n\r\n  return (\r\n    <Link to={linkUrl} className={buttonClassNames}>\r\n      <div>{buttonText}</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport \"css/dashboard/dashboard-header.css\";\r\nimport LinkButton from \"./LinkButton\";\r\n\r\nconst DashboardHeader = () => {\r\n  const { pathname: currentUrl } = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"flex-box-vert-align\">\r\n        <div\r\n          className=\"flex-box-vert-align overflow-y\"\r\n          style={{ flex: 4, justifyContent: \"space-between\" }}\r\n        >\r\n          <div className=\"flex-box-vert-align\">\r\n            <LinkButton\r\n              // linkUrl={`${url}/modellist`}\r\n              linkUrl={`/modellist`}\r\n              buttonText=\"Model Viewer\"\r\n              currentUrl={currentUrl}\r\n            />\r\n            <LinkButton\r\n              // linkUrl={`${url}/modelupload`}\r\n              linkUrl={`/modelupload`}\r\n              buttonText=\"Model Upload\"\r\n              currentUrl={currentUrl}\r\n            />\r\n            <LinkButton\r\n              // linkUrl={`${url}/dataViewer`}\r\n              linkUrl={`/dataViewer`}\r\n              buttonText=\"Data Viewer\"\r\n              currentUrl={currentUrl}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboardHeader.propTypes = {};\r\n\r\nexport default DashboardHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"css/dashboard/model-list.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const ModelBox = ({\r\n  modelName,\r\n  validationLossHistory,\r\n  validationLoss,\r\n  optimizerName,\r\n  learningRate,\r\n  activation,\r\n  isDeployed,\r\n  setDeployed,\r\n}) => {\r\n  return (\r\n    <div className=\"model-box\">\r\n      <div className=\"model-box-text\" style={{ paddingRight: \"40px\" }}>\r\n        <h3 style={{ margin: 0, maxWidth: \"15em\", overflow: \"auto\" }}>\r\n          {modelName}\r\n        </h3>\r\n        <br />\r\n        <div style={{ fontSize: \"1.4em\" }}>\r\n          Validation loss:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            {validationLoss.toFixed(1)}\r\n          </span>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          Optimizer:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{optimizerName}</span>\r\n        </div>\r\n        <div>\r\n          Learning Rate:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{learningRate.toFixed(5)}</span>\r\n        </div>\r\n        <div>\r\n          Activation:{\"  \"}\r\n          <span style={{ fontWeight: \"bold\" }}>{activation}</span>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          Is deplyoed:\r\n          <span style={{ fontWeight: \"bold\" }}>{isDeployed + \"\"}</span>\r\n          <br />\r\n          {!isDeployed ? (\r\n            <Button onClick={() => setDeployed(modelName)}>Deploy</Button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"model-box-text\">\r\n        <Line\r\n          data={{\r\n            labels: validationLossHistory.map((v) => \"\"),\r\n            datasets: [\r\n              {\r\n                label: \"Training Accuracy\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: validationLossHistory,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable no-restricted-syntax */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ModelBox } from \"./ModelBox\";\r\nimport \"css/dashboard/model-list.css\";\r\n\r\nconst ModelList = () => {\r\n  const [searchValue, setSearchValue] = useState(null);\r\n  const [models, setModels] = useState(null);\r\n\r\n  const loadModels = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/models/list\");\r\n      console.log(\"resr\", res);\r\n      const parsed = res.data\r\n        .filter((modelMeta) => {\r\n          const json_summary = JSON.parse(modelMeta.json_summary);\r\n          return json_summary.summary;\r\n          // typeof modelMeta.json_summary !== \"string\"\r\n        })\r\n        .map((modelMeta) => {\r\n          const json_summary = JSON.parse(modelMeta.json_summary);\r\n\r\n          return {\r\n            ...modelMeta,\r\n            json_summary: {\r\n              ...json_summary,\r\n              summary: JSON.parse(json_summary.summary),\r\n            },\r\n          };\r\n        });\r\n\r\n      console.log(\"parsed\", parsed);\r\n      setModels(parsed);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  const setDeployed = async (modelName) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ filename: modelName });\r\n\r\n    try {\r\n      await axios.put(\"/api/models/setDeployed\", body, config);\r\n      loadModels();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-list-container\">\r\n      <div className=\"filter-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by model name\"\r\n          onChange={(event) => setSearchValue(event.target.value)}\r\n        />\r\n      </div>\r\n      {models ? (\r\n        models\r\n          .filter(({ filename: name }) => {\r\n            if (!searchValue) return true;\r\n            const searchItems = searchValue.split(\" \");\r\n            for (const string of searchItems) {\r\n              if (name.indexOf(string) !== -1) return true;\r\n            }\r\n            return false;\r\n          })\r\n          .map((model) => {\r\n            const val_loss = model.json_summary.history.history.val_loss;\r\n            return (\r\n              <ModelBox\r\n                key={model.filename}\r\n                modelName={model.filename}\r\n                validationLossHistory={val_loss}\r\n                validationLoss={val_loss[val_loss.length - 1]}\r\n                optimizerName={model.json_summary.optimizer.name}\r\n                learningRate={model.json_summary.optimizer.learning_rate}\r\n                activation={\r\n                  model.json_summary.summary.config.layers[1].config.activation\r\n                }\r\n                isDeployed={model.deployed}\r\n                setDeployed={setDeployed}\r\n              />\r\n            );\r\n          })\r\n      ) : (\r\n        <h3>Loading models... </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelList;\r\n","import React from \"react\";\r\n\r\nexport const UploadButton = ({ onClick, enabled }) => {\r\n  return (\r\n    <button onClick={onClick} disabled={!enabled}>\r\n      Upload model\r\n    </button>\r\n  );\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UploadButton } from \"./subcomponents/UploadButton\";\r\nimport \"css/dashboard/model-upload.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport fileDownload from \"js-file-download\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst uploadStatuses = {\r\n  NONE: \"NONE\",\r\n  PENDING: \"PENDING\",\r\n  DONE: \"DONE\",\r\n  ERROR: \"ERROR\",\r\n};\r\n\r\nconst ModelUpload = () => {\r\n  const [fileProperties, setFileProperties] = useState({\r\n    fileIsH5: null,\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(uploadStatuses.NONE);\r\n\r\n  const handleFiles = async (event) => {\r\n    const f = event.target.files[0];\r\n    setFile(f);\r\n    setUploadStatus(uploadStatuses.NONE);\r\n\r\n    console.log(f);\r\n    const isFormatValid = f.name.indexOf(\".h5\") > -1;\r\n\r\n    if (!isFormatValid) {\r\n      setFileProperties({\r\n        fileIsH5: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    setFileProperties({\r\n      fileIsH5: true,\r\n    });\r\n  };\r\n\r\n  const fileIsChosen = fileProperties.fileIsH5 != null;\r\n  const fileReadyToUpload = fileProperties.fileIsH5 === true;\r\n\r\n  const downloadTemplate = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/models/template\", {}, {});\r\n      // const file = new File(res.data, \"t.zip\");\r\n      // ArrayBuffer;\r\n      // fileDownload(new ArrayBuffer(res.data), \"tf_template.zip\");\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n      } else {\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const upload = async (e) => {\r\n    setUploadStatus(uploadStatuses.PENDING);\r\n\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"tf_model\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/models/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        setUploadStatus(uploadStatuses.DONE);\r\n      } else {\r\n        setUploadStatus(uploadStatuses.ERROR);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        {/* <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            console.log(\"click\");\r\n            downloadTemplate();\r\n          }}\r\n        >\r\n          Download .py template\r\n        </Button> */}\r\n        <a href=\"http://localhost:5000/api/models/template\" download>\r\n          Download .py template\r\n        </a>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <h2>Model Upload</h2>\r\n      <div style={{ display: \"flex\" }}>\r\n        <input type=\"file\" id=\"modelFileUpload\" onChange={handleFiles} />\r\n      </div>\r\n      <br />\r\n      {fileIsChosen ? (\r\n        fileProperties.fileIsH5 === true ? (\r\n          <h3>Model is ready to upload</h3>\r\n        ) : (\r\n          <h3 className=\"red\">File with he model must be .h5 format.</h3>\r\n        )\r\n      ) : (\r\n        <h3>Please choose a .h5 file to upload.</h3>\r\n      )}\r\n      <br />\r\n      <UploadButton onClick={upload} enabled={fileReadyToUpload} />\r\n      <br />\r\n      {uploadStatus === uploadStatuses.PENDING ? (\r\n        <>\r\n          <h3 className=\"yellow\">\r\n            Model is being uploaded and converted to TF Lite...{\" \"}\r\n          </h3>\r\n          <h5>This may take up to 15 seconds</h5>\r\n        </>\r\n      ) : null}\r\n      {uploadStatus === uploadStatuses.DONE ? (\r\n        <h3 className=\"green\">\r\n          Model uploaded and converted to TF Lite successfully\r\n        </h3>\r\n      ) : null}\r\n      {uploadStatus === uploadStatuses.ERROR ? (\r\n        <h3 className=\"red\">\r\n          An error has occured during the upload. Please try again\r\n        </h3>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelUpload;\r\n","const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport default sleep;\r\n","import { v4 as uuid4 } from \"uuid\";\r\n\r\nconst idGenerator = uuid4;\r\n\r\nexport default idGenerator;\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PropTypes from \"prop-types\";\r\nimport idGen from \"../../../utils/idGenerator\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst modelToViewNotation = {\r\n  supportCode: \"Support Code\",\r\n  wellBeingScore: \"Wellbing Score\",\r\n  weeklySteps: \"Weekly Steps\",\r\n  weeklyCalls: \"Weekly Calls\",\r\n  errorRate: \"Error Rate\",\r\n  postCode: \"Post Code\",\r\n};\r\n\r\nconst DataTable = ({ data }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {Object.keys(data[0]).map((key) => {\r\n              return <TableCell>{modelToViewNotation[key]}</TableCell>;\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((entry) => (\r\n            <TableRow key={entry.id}>\r\n              {Object.values(entry).map((val) => {\r\n                return (\r\n                  <TableCell key={idGen()} component=\"th\" scope=\"row\">\r\n                    {val}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default DataTable;\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport sleep from \"utils/sleep\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nconst DataViewer = () => {\r\n  const [tableData, setTableData] = useState(null);\r\n  const [numberOfEntries, setNumberOfEntres] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await sleep(500);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const body = JSON.stringify({});\r\n\r\n      try {\r\n        const res = await axios.get(\"/api/data/\", body, config);\r\n        const payload = res.data;\r\n        setTableData(payload.data.map((entry) => JSON.parse(entry)));\r\n        setNumberOfEntres(payload.numberOfEntries);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1> The Aggregator </h1>\r\n      {numberOfEntries ? (\r\n        <>\r\n          <h2>Total entries: {numberOfEntries}</h2>\r\n          <br />\r\n          <h3>Latest {Math.min(numberOfEntries, 10)} entries:</h3>\r\n          <DataTable data={tableData} />\r\n        </>\r\n      ) : (\r\n        <h3>Loading data...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDataViewer.propTypes = {};\r\n\r\nexport default DataViewer;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Button } from \"react-bootstrap\";\nimport \"css/App.css\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"store/actions/auth\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport HeaderLink from \"./components/Header/HeaderLink\";\nimport TeamMembersTable from \"./components/TeamMembersTable/TeamMembersTable\";\nimport AuthForm from \"./components/auth/AuthForm\";\nimport ModelList from \"./components/Dashboard/ModelList/ModelList\";\nimport ModelUpload from \"./components/Dashboard/ModelUpload/ModelUpload\";\nimport DataViewer from \"./components/Dashboard/DataViewer/DataViewer\";\nimport DashboardHeader from \"./components/Dashboard/DashbarodHeader/DashboardHeader\";\n\nconst App = ({ loggedIn, logout }) => {\n  return (\n    <Router>\n      {/* <Header /> */}\n      <DashboardHeader />\n      <div style={{ padding: \"20px\" }}>\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} /> */}\n          {/* <Route path=\"/register\" component={Register} /> */}\n          <Route path=\"/modellist\" component={ModelList} />\n          <Route path=\"/modelupload\" component={ModelUpload} />\n          <Route path=\"/dataViewer\" component={DataViewer} />\n          {/* <Route path=\"/test\" component={ReactSandbox} /> */}\n        </Switch>\n      </div>\n    </Router>\n    // <Router>\n    //   <div className=\"container-for-content-and-footer\">\n    //     <div>\n    //       <Header\n    //         leftButtons={\n    //           <>\n    //             <HeaderLink to=\"/index\" text=\"Home\" />\n\n    //             {loggedIn ? (\n    //               <>\n    //                 <HeaderLink to=\"/doc\" text=\"API Doc\" />\n    //                 <HeaderLink to=\"/dashboard\" text=\"Dashboard\" />\n    //                 <HeaderLink to=\"/available\" text=\"Availibility\" />\n    //               </>\n    //             ) : null}\n    //           </>\n    //         }\n    //         rightButtons={\n    //           <>\n    //             {loggedIn ? (\n    //               <Button\n    //                 variant=\"link secondary\"\n    //                 onClick={() => {\n    //                   console.log(\"click\");\n    //                   logout();\n    //                 }}\n    //               >\n    //                 Logout\n    //               </Button>\n    //             ) : (\n    //               <HeaderLink to=\"/login\" text=\"Login\" />\n    //             )}\n    //           </>\n    //         }\n    //       />\n    //       <Container className=\"container-padding\">\n    //         <Switch>\n    //           <Route\n    //             exact\n    //             path={[\"/\", \"/index\"]}\n    //             component={TeamMembersTable}\n    //           />\n    //           <Route path=\"/dashboard\" component={Dashboard} />\n    //           <Route path=\"/login\">\n    //             <AuthForm Form={Login} />\n    //           </Route>\n    //           <Route path=\"/register\">\n    //             <AuthForm Form={Register} />\n    //           </Route>\n    //         </Switch>\n    //       </Container>\n    //     </div>\n    //     <Footer />\n    //   </div>\n    // </Router>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: !!state.auth.token,\n});\n\nexport default connect(mapStateToProps, { logout })(App);\n","import React, { useState } from \"react\";\nimport \"css/auth.css\";\nimport \"css/margins.css\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { loginSuccess } from \"store/actions/auth\";\n\nconst Login = ({ loginSuccess, setErrorMessage, setSuccessMessage }) => {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const login = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify(inputs);\n\n    try {\n      const res = await axios.post(\"/api/auth/login\", body, config);\n\n      if (res.data.error) {\n        setErrorMessage(res.data.error);\n      } else {\n        const { token } = res.data;\n\n        loginSuccess(token);\n\n        setSuccessMessage(\"Login successful.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"An error has occured, please try again.\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    login();\n  };\n\n  return (\n    <div className=\"auth-form\">\n      <h1 className=\"margin-bottom\">Log In</h1>\n      <Form className=\"margin-bottom\" onSubmit={handleSubmit}>\n        <Form.Group name=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            placeholder=\"Username\"\n            onChange={handleInput}\n            value={inputs.username}\n            name=\"username\"\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleInput}\n            value={inputs.password}\n            name=\"password\"\n          />\n        </Form.Group>\n\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n      <div>\n        New User? <Link to=\"/register\">Click here to register!</Link>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default connect(null, { loginSuccess })(Login);\n","/* eslint-disable no-restricted-syntax */\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\n// export const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport function validateType(obj, types) {\r\n  if (Object.keys(obj).length !== Object.keys(types).length) {\r\n    throw new TypeError(\"wrong type\");\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(obj)) {\r\n    if (!types[key] || (value != null && types[key] !== typeof value)) {\r\n      throw new TypeError(`key ${key} value ${value}`);\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"css/auth.css\";\r\nimport \"css/margins.css\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerSuccess } from \"store/actions/auth\";\r\n\r\nconst Register = ({ registerSuccess, setErrorMessage, setSuccessMessage }) => {\r\n  const [inputs, setInputs] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputs({ ...inputs, [name]: value });\r\n  };\r\n\r\n  const register = async () => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify(inputs);\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/auth/register\", body, config);\r\n\r\n      if (res.data.error) {\r\n        setErrorMessage(res.data.error);\r\n      } else {\r\n        const { token } = res.data;\r\n\r\n        registerSuccess(token);\r\n\r\n        setSuccessMessage(\"Registration successful.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"An error has occured, please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (inputs.password !== inputs.password2) {\r\n      setErrorMessage(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    register();\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1 className=\"margin-bottom\">Register</h1>\r\n      <Form className=\"margin-bottom\" onSubmit={handleSubmit}>\r\n        <Form.Group name=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"Username\"\r\n            onChange={handleInput}\r\n            value={inputs.username}\r\n            name=\"username\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={handleInput}\r\n            value={inputs.email}\r\n            name=\"email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleInput}\r\n            value={inputs.password}\r\n            name=\"password\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Repeat Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Repeat Password\"\r\n            onChange={handleInput}\r\n            value={inputs.password2}\r\n            name=\"password2\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { registerSuccess })(Register);\r\n","import { REGISTER_SUCCESS, LOGIN_SUCCESS, LOGOUT } from \"../actions\";\r\n\r\nconst tokenLocalStorageKey = \"token\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(tokenLocalStorageKey),\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS: {\r\n      const { token } = payload;\r\n      localStorage.setItem(tokenLocalStorageKey, token);\r\n      return {\r\n        token,\r\n      };\r\n    }\r\n    case LOGOUT: {\r\n      localStorage.removeItem(tokenLocalStorageKey);\r\n      return {\r\n        token: null,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nconst app = combineReducers({ auth });\r\n\r\nexport default app;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   stateReconciler: autoMergeLevel2,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  // persistedReducer,\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport App from \"./App\";\n\nimport storeAndPersistor from \"./store/store\";\n\nconst { store, persistor } = storeAndPersistor;\n\nconst baseSize = 1;\nconst styles = (theme) => ({\n  \"@global\": {\n    // MUI typography elements use REMs, so you can scale the global\n    // font size by setting the font-size on the <html> element.\n    html: {\n      // fontSize: baseSize * 1.4 + \"em\",\n      [theme.breakpoints.up(\"sm\")]: {\n        fontSize: baseSize * 1.1 + \"em\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        fontSize: baseSize * 1.4 + \"em\",\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        fontSize: baseSize * 1.5 + \"em\",\n      },\n    },\n  },\n});\n\n// const Appp = withStyles(styles)(App);\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}